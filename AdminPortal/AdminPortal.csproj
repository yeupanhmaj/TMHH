<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>netcoreapp3.0</TargetFramework>
	<AspNetCoreHostingModel>InProcess</AspNetCoreHostingModel>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
    <IsPackable>false</IsPackable>
    <SpaRoot>ClientApp\</SpaRoot>
    <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>
    <ApplicationIcon />
    <OutputType>Exe</OutputType>
    <StartupObject />
  </PropertyGroup>
	
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Debug|AnyCPU'">
      <GenerateDocumentationFile>true</GenerateDocumentationFile>
	  <DocumentationFile>C:\Working\oldwebMita\newvietin\Sources\WebAdminPortal\AdminPortal\AdminPortal.xml</DocumentationFile>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|AnyCPU'">
    <DocumentationFile>C:\Working\oldwebMita\newvietin\Sources\WebAdminPortal\AdminPortal\AdminPortal.xml</DocumentationFile>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
    <DocumentationFile>C:\Working\oldwebMita\newvietin\Sources\WebAdminPortal\AdminPortal\AdminPortal.xml</DocumentationFile>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="DocumentFormat.OpenXml" Version="2.9.1" />
    <PackageReference Include="EPPlus.Core" Version="1.5.4" />
    <PackageReference Include="Microsoft.Extensions.Logging.Log4Net.AspNetCore" Version="3.0.0" />
    <PackageReference Include="Microsoft.SqlServer.SqlManagementObjects" Version="150.18178.0" />
    <PackageReference Include="Open-XML-SDK" Version="2.9.0" />
    <PackageReference Include="Spring.Core" Version="2.0.1" />
    <PackageReference Include="Swashbuckle.AspNetCore.Swagger" Version="5.0.0-rc4" />
	<PackageReference Include="Swashbuckle.AspNetCore" Version="5.0.0-rc4" />
	<PackageReference Include="System.Data.SqlClient" Version="4.6.0" />
    <PackageReference Include="Microsoft.AspNetCore.Authentication.JwtBearer" Version="3.0.0" />
    <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="3.0.0" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.SqlServer" Version="3.0.0" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Tools" Version="3.0.0">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.Extensions.Logging.Debug" Version="3.0.0" />
    <PackageReference Include="Microsoft.VisualStudio.Web.CodeGeneration.Design" Version="3.0.0" />
    <PackageReference Include="NPOI" Version="2.4.1" />
    <PackageReference Include="System.Data.Odbc" Version="4.6.0" />
    <PackageReference Include="System.IdentityModel.Tokens.Jwt" Version="5.5.0" />
  </ItemGroup>

  <ItemGroup>
    <!-- Don't publish the SPA source files, but do show them in the project files list -->
    <Compile Remove="ClientApp\src\NewFolder1\**" />
    <Content Remove="$(SpaRoot)**" />
    <Content Remove="ClientApp\src\NewFolder1\**" />
    <EmbeddedResource Remove="ClientApp\src\NewFolder1\**" />
    <None Remove="$(SpaRoot)**" />
    <None Remove="ClientApp\src\NewFolder1\**" />
    <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
  </ItemGroup>

  <ItemGroup>
    <Content Remove="log4net.config" />
  </ItemGroup>

  <ItemGroup>
    <None Remove="ClientApp\src\components\authenticated\index.tsx" />
    <None Remove="ClientApp\src\libs\common\responeMessage.ts" />
    <None Remove="ClientApp\src\screens\login\index.tsx" />
    <None Remove="ClientApp\src\screens\login\model.tsx" />
    <None Remove="ClientApp\src\store\User.ts" />
  </ItemGroup>

  <ItemGroup>
    <Reference Include="EncryptionLibrary">
      <HintPath>EncryptionLibrary.dll</HintPath>
    </Reference>
  </ItemGroup>

  <ItemGroup>
    <TypeScriptCompile Include="ClientApp\src\components\authenticated\index.tsx" />
    <TypeScriptCompile Include="ClientApp\src\libs\common\responeMessage.ts" />
    <TypeScriptCompile Include="ClientApp\src\screens\login\index.tsx" />
    <TypeScriptCompile Include="ClientApp\src\screens\login\model.tsx" />
    <TypeScriptCompile Include="ClientApp\src\store\User.ts" />
  </ItemGroup>

  <ItemGroup>
    <None Update="AdminPortal.xml">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </None>
  </ItemGroup>

  <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
  </Target>

  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build" />

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="$(SpaRoot)build\**; $(SpaRoot)build-ssr\**" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
        <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>

</Project>
